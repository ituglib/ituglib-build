# Paste the rest of this file into a standard Pipeline project to
# build/test/stage git.
# Also set Discard old builds, typically log rotation to 2
# Poll SCM something useful, like H/10 * * * *

node {
    lock(resource: 'git-test-environment') {
        stage('checkout') {
            checkout([$class: 'GitSCM',
            changelog: true,
            poll: true,
            branches: [[name: '*/ituglib_release']],
            extensions: [
                [$class: 'CleanBeforeCheckout']],
            doGenerateSubmoduleConfigurations: false, submoduleCfg: [],
            userRemoteConfigs: [[url: '/home/git/git']]])
        }
        stage('build') {
            withEnv(['GIT_DIST=/web/stage',
                    'PREFIX=/usr/local',
                    'PATH=/usr/coreutils/bin:/usr/local/bin:/usr/bin:/bin:/usr/ucb',
                    '_RLD_LIB_PATH=:/usr/local/lib']) {
                sh "/usr/coreutils/bin/make prefix=${PREFIX} SHELL=/usr/coreutils/bin/bash"
            }
        }
        stage('findcall_floss') {
            withEnv(['PATH=/usr/coreutils/bin:/usr/local/bin:/usr/bin:/bin:/usr/ucb',
                    '_RLD_LIB_PATH=:/usr/local/lib']) {
                sh 'findcall_floss || echo "Ignoring results"'
            }
        }
        stage('test') {
            withEnv(['PATH=/usr/coreutils/bin:/usr/local/bin:/usr/bin:/bin:/usr/ucb',
                    '_RLD_LIB_PATH=:/usr/local/lib']) {
                sh '/usr/coreutils/bin/make -k test TEST_LINT= SHELL=/usr/coreutils/bin/bash || echo "Git Test FAILURE, however t9001 and t9020 always fail"'
            }
        }
    }
}

